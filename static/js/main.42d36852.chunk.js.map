{"version":3,"sources":["TransactionItem.js","SearchTransaction.js","AddTransactionForm.js","TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionItem","_ref","transaction","onDeleteTransaction","date","description","category","amount","React","createElement","style","color","onClick","fetch","concat","id","method","then","res","json","SearchTransaction","searchParam","onTransactionSearch","className","type","name","value","placeholder","onChange","evt","target","AddTransactionForm","onAddTransaction","formData","setFormData","useState","handleChange","[object Object]","onSubmit","preventDefault","transactionData","fetchPOSTOptions","headers","Content-Type","body","JSON","stringify","newTransaction","aria-labelledby","TransactionList","transactions","setTransactions","setSearchParam","useEffect","transactionsList","filter","toLowerCase","includes","handleTransactionDelete","deletedTransaction","updatedTransactions","prevTransactions","map","key","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.42d36852.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TransactionItem({ transaction, onDeleteTransaction }) {\n  let { date, description, category, amount } = transaction;\n\n  //DELETE transaction operation\n  function handleTransactionDelete() {\n    fetch(`https://my-json-server.typicode.com/DianJeruto/Flatiron-App/transactions/${transaction.id}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then(() => onDeleteTransaction(transaction));\n  }\n\n  return (\n    <tbody>\n      <tr>\n        <td>{date}</td>\n        <td>{description}</td>\n        <td>{category}</td>\n        <td>{amount}</td>\n        <td>\n          <button style={{ color: \"red\" }} onClick={handleTransactionDelete}>\n            DELETE\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default TransactionItem;","import React from \"react\";\n\nfunction SearchTransaction({ searchParam, onTransactionSearch }) {\n  function handleTransactionSearch(evt) {\n    onTransactionSearch(evt.target.value);\n  }\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        name=\"searchParam\"\n        value={searchParam}\n        placeholder=\"Search your recent transactions\"\n        onChange={handleTransactionSearch}\n      />\n      <i className=\"circular search link icon\"></i>\n    </div>\n  );\n}\n\nexport default SearchTransaction;","import React, { useState } from \"react\";\n\nfunction AddTransactionForm({ onAddTransaction }) {\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    setFormData({ ...formData, [name]: value });\n  }\n  function handleFormSubmit(evt) {\n    evt.preventDefault();\n    const transactionData = {\n      date: formData.date,\n      description: formData.description,\n      category: formData.category,\n      amount: formData.amount,\n    };\n\n    //POST request to add the transaction\n    const fetchPOSTOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(transactionData),\n    };\n    fetch(`https://my-json-server.typicode.com/DianJeruto/Flatiron-App/transactions`, fetchPOSTOptions)\n      .then((res) => res.json())\n      .then((newTransaction) => onAddTransaction(newTransaction));\n\n    // RESET form after POST operation\n    setFormData({\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: 0,\n    });\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleFormSubmit}>\n        <div className=\"inline fields\">\n          <label id=\"date\">\n            Date:\n            <input\n              type=\"date\"\n              name=\"date\"\n              aria-labelledby=\"date\"\n              value={formData.date}\n              onChange={handleChange}\n            />\n          </label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={formData.description}\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            value={formData.category}\n            placeholder=\"Category\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={formData.amount}\n            placeholder=\"Amount\"\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\" style={{ color: \"green\" }}>\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;","import React, { useState, useEffect } from \"react\";\nimport TransactionItem from './TransactionItem';\nimport SearchTransaction from './SearchTransaction';\nimport AddTransactionForm from './AddTransactionForm';\n\nfunction TransactionList(){\n  const [transactions, setTransactions] = useState([]);\n  const [searchParam, setSearchParam] = useState(\"\");\n\n  //GET TRANSACTIONS FROM DB\n  useEffect(() => {\n    fetch('https://my-json-server.typicode.com/DianJeruto/Flatiron-App/transactions')\n      .then((res) => res.json())\n      .then((transactions) => setTransactions(transactions));\n  }, []);\n\n  //POST FUNCTIONALITY TO DB\nfunction handleAddTransaction(newTransaction) {\n  setTransactions((prevTransactions) => [...prevTransactions, newTransaction]);\n}\n\n\n  //SEARCH FUNCTIONALITY\n  const transactionsList = transactions.filter((transaction) => {\n    return transaction.description\n      .toLowerCase()\n      .includes(searchParam.toLowerCase());\n  });\n\n  //DELETE FUNCTIONALITY\n  function handleTransactionDelete(deletedTransaction) {\n    const updatedTransactions = transactions.filter(\n      (transaction) => transaction.id !== deletedTransaction.id\n    );\n    setTransactions(updatedTransactions);\n  }\n\n  //FILTER SEARCH OUTPUT DISPLAYED\n  // function filterTransactions() {\n\n  // }\n\n  return (\n    <div>\n      <SearchTransaction\n        searchParam={searchParam}\n        onTransactionSearch={setSearchParam}\n      />\n      <AddTransactionForm onAddTransaction={handleAddTransaction} />\n\n      <table className=\"ui celled striped padded table\">\n        <thead className=\"ui center aligned header\">\n          <tr>\n            <th>Date</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Amount</th>\n            <th>DELETE?</th>\n          </tr>\n        </thead>\n        {transactionsList.map((transaction) => (\n          <TransactionItem\n            key={transaction.id}\n            transaction={transaction}\n            onDeleteTransaction={handleTransactionDelete}\n          />\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionList;","import React from \"react\";\nimport \"./App.css\";\nimport TransactionList from \"./TransactionList\";\n\nfunction App(){\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h1>The Royal Bank of Flatiron</h1>\n      </div>\n      <TransactionList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}